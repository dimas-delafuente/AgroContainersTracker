    @page "/clientes/crear"

@using AgroContainerTracker.Domain.Companies
@using AgroContainerTracker.Domain.Rates
@using AgroContainerTracker.Domain

@using AgroContainerTracker.Core.Services

@inject ICustomerService customerService
@inject ICountryService countryService
@inject  IRateService rateService
@inject NavigationManager NavigationManager
@inject NotificationService notificationService

<h1>Añadir Cliente</h1>

<div class="row mt-4">
    <div class="col-sm-4">
        <NavLink class="nav-link" href="/empresas" Match="NavLinkMatch.All">
            <span class="oi oi-arrow-left"></span> Volver a la lista
        </NavLink>
    </div>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}


<EditForm Model="@customer" OnValidSubmit="AddCustomer">
    <DataAnnotationsValidator />

    <RadzenFieldset Text="INFORMACIÓN" class="mt-4">
        <div class="row">
            <div class="form-group col-lg-2">
                <label for="number">Nº Cliente:</label>
                <InputNumber id="number" name="number" @bind-Value="customer.CustomerNumber" class="form-control" />
                <ValidationMessage For="@(() => customer.CustomerNumber)" />
            </div>
            <div class="form-group col-lg-5">
                <label for="name">Nombre:</label>
                <InputText id="name" @bind-Value="customer.Name" class="form-control" />
                <ValidationMessage For="@(() => customer.Name)" />
            </div>
            <div class="form-group col-lg-5">
                <label for="cif">CIF:</label>
                <InputText id="cif" name="cif" @bind-Value="customer.CompanyCode" class="form-control" />
                <ValidationMessage For="@(() => customer.CompanyCode)" />
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-6">
                <label for="name">Contacto:</label>
                <InputText id="name" @bind-Value="customer.ContactName" class="form-control" />
            </div>
            <div class="form-group col-lg-6">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="customer.Email" class="form-control" />
                <ValidationMessage For="@(() => customer.Email)" />

            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-6">
                <label for="phone">Teléfono:</label>
                <InputText id="phone" @bind-Value="customer.Phone" class="form-control" />
                <ValidationMessage For="@(() => customer.Phone)" />

            </div>
            <div class="form-group col-lg-6">
                <label for="mobile">Móvil:</label>
                <InputText id="mobile" @bind-Value="customer.Mobile" class="form-control" />
                <ValidationMessage For="@(() => customer.Mobile)" />
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-12">
                <label for="description">Observaciones:</label>
                <InputTextArea id="description" @bind-Value="customer.Description" class="form-control" />
                <ValidationMessage For="@(() => customer.Description)" />
            </div>
        </div>
    </RadzenFieldset>



    <RadzenFieldset Text="DIRECCIÓN" class="mt-2">
        <div class="row">
            <div class="form-group col-lg-8">
                <label for="address">Dirección:</label>
                <InputText id="address" @bind-Value="customer.Address" class="form-control" />
            </div>
            <div class="form-group col-lg-4">
                <label for="locality">Localidad:</label>
                <InputText id="locality" @bind-Value="customer.Locality" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="form-group col-lg-4">
                <label for="postal_code">Código Postal:</label>
                <InputText id="postal_code" @bind-Value="customer.PostalCode" class="form-control" />
                <ValidationMessage For="@(() => customer.PostalCode)" />

            </div>
            <div class="form-group col-lg-4">
                <label for="state">Provincia:</label>
                <InputText id="state" @bind-Value="customer.State" class="form-control" />
            </div>
            <div class="form-group col-lg-4">
                <label for="country">País:</label>
                <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                Data="@countries" @bind-Value="customer.CountryId"
                                TextProperty="Name" ValueProperty="CountryId" Style="display: block;" Required />
            </div>
        </div>
    </RadzenFieldset>

    <RadzenFieldset Text="DATOS FACTURACIÓN" class="mt-2">
        <div class="row">
            <div class="form-group col-lg-4">
                <label for="rate">Tarifa:</label>
                <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                Data="@rates" @bind-Value="customer.RateId"
                                TextProperty="Name" ValueProperty="RateId" Style="display: block;" Required />
            </div>
            <div class="form-group col-lg-8">
                <label for="bankAccount">Cuenta bancaria:</label>
                <InputText id="bankAccount" name="bankAccount" @bind-Value="customer.BankAccount" class="form-control" />
            </div>
        </div>
    </RadzenFieldset>

    <hr />
    <div class="row mt-4 mb-4">
        <div class="col-lg-12">
            <div class="float-right">
                <button type="button" class="btn btn-outline-dark" @onclick="OnCancel">Cancelar</button>
                <button type="submit" class="btn btn-success"><span class="oi oi-check"></span> Guardar cambios</button>
            </div>
        </div>
    </div>
</EditForm>


@code {
    private const int SPAIN_COUNTRY_ID = 28;

    private AddCustomerRequest customer = new AddCustomerRequest
    {
        CountryId = SPAIN_COUNTRY_ID
    };

    private List<Rate> rates = new List<Rate>();
    public string errorMessage;

    private IEnumerable<Country> countries;

    protected override async Task OnInitializedAsync()
    {
        countries = await countryService.GetAll().ConfigureAwait(false);
        rates = await rateService.GetAllAsync().ConfigureAwait(false);
    }

    public async Task AddCustomer()
    {
        Customer customerCreated = await customerService.AddAsync(customer).ConfigureAwait(false);

        if (customerCreated != null)
        {
            var message = new NotificationMessage()
            {
                Severity = NotificationSeverity.Success,
                Summary = "Cliente añadido",
                Detail = "El cliente se ha añadido correctamente",
                Duration = 4000
            };
            Notify(message);
            NavigationManager.NavigateTo("empresas");

        }
        else
        {
            errorMessage = "Se ha producido un error. Revise los campos e inténtelo de nuevo.";
            var message = new NotificationMessage()
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error",
                Detail = "Se ha producido un error al añadir el cliente.",
                Duration = 4000
            };
            Notify(message);
        }
    }

    public void OnCancel()
    {
        NavigationManager.NavigateTo("empresas");
    }

    private void Notify(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}
