@page "/acreedores/crear"

@using AgroContainerTracker.Domain.Companies
@using AgroContainerTracker.Domain

@using AgroContainerTracker.Core.Services

@inject ICreditorService creditorService
@inject ICountryService countryService
@inject NavigationManager NavigationManager
@inject NotificationService notificationService

<h1>Añadir Acreedor</h1>

<div class="row mt-4">
    <div class="col-sm-4">
        <NavLink class="nav-link" href="/empresas" Match="NavLinkMatch.All">
            <span class="oi oi-arrow-left"></span> Volver a la lista
        </NavLink>
    </div>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}


<EditForm Model="@creditor" OnValidSubmit="AddCreditor">
    <DataAnnotationsValidator />

    <RadzenFieldset Text="INFORMACIÓN" class="mt-4">
        <div class="row">
            <div class="form-group col-lg-2">
                <label for="number">Nº Acreedor:</label>
                <InputNumber id="number" name="number" @bind-Value="creditor.CreditorNumber" class="form-control" />
                <ValidationMessage For="@(() => creditor.CreditorNumber)" />
            </div>
            <div class="form-group col-lg-5">
                <label for="name">Nombre:</label>
                <InputText id="name" @bind-Value="creditor.Name" class="form-control" />
                <ValidationMessage For="@(() => creditor.Name)" />
            </div>
            <div class="form-group col-lg-5">
                <label for="cif">CIF:</label>
                <InputText id="cif" name="cif" @bind-Value="creditor.CompanyCode" class="form-control" />
                <ValidationMessage For="@(() => creditor.CompanyCode)" />
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-6">
                <label for="name">Contacto:</label>
                <InputText id="name" @bind-Value="creditor.ContactName" class="form-control" />
            </div>
            <div class="form-group col-lg-6">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="creditor.Email" class="form-control" />
                <ValidationMessage For="@(() => creditor.Email)" />

            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-6">
                <label for="phone">Teléfono:</label>
                <InputText id="phone" @bind-Value="creditor.Phone" class="form-control" />
                <ValidationMessage For="@(() => creditor.Phone)" />

            </div>
            <div class="form-group col-lg-6">
                <label for="mobile">Móvil:</label>
                <InputText id="mobile" @bind-Value="creditor.Mobile" class="form-control" />
                <ValidationMessage For="@(() => creditor.Mobile)" />
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-12">
                <label for="description">Observaciones:</label>
                <InputTextArea id="description" @bind-Value="creditor.Description" class="form-control" />
                <ValidationMessage For="@(() => creditor.Description)" />
            </div>
        </div>
    </RadzenFieldset>



    <RadzenFieldset Text="DIRECCIÓN" class="mt-2">
        <div class="row">
            <div class="form-group col-lg-8">
                <label for="address">Dirección:</label>
                <InputText id="address" @bind-Value="creditor.Address" class="form-control" />
            </div>
            <div class="form-group col-lg-4">
                <label for="locality">Localidad:</label>
                <InputText id="locality" @bind-Value="creditor.Locality" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="form-group col-lg-4">
                <label for="postal_code">Código Postal:</label>
                <InputText id="postal_code" @bind-Value="creditor.PostalCode" class="form-control" />
                <ValidationMessage For="@(() => creditor.PostalCode)" />

            </div>
            <div class="form-group col-lg-4">
                <label for="state">Provincia:</label>
                <InputText id="state" @bind-Value="creditor.State" class="form-control" />
            </div>
            <div class="form-group col-lg-4">
                <label for="country">País:</label>
                <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data="@countries" @bind-Value="creditor.CountryId"
                                TextProperty="Name" ValueProperty="CountryId" Style="display: block;" />
            </div>
        </div>
    </RadzenFieldset>

    <hr />
    <div class="row mt-4 mb-4">
        <div class="col-lg-12">
            <div class="float-right">
                <button type="button" class="btn btn-outline-dark" @onclick="OnCancel">Cancelar</button>
                <button type="submit" class="btn btn-success"><span class="oi oi-check"></span> Guardar cambios</button>
            </div>
        </div>
    </div>
</EditForm>


@code {
    private AddCreditorRequest creditor = new AddCreditorRequest();
    public string errorMessage;

    private IEnumerable<Country> countries;

    protected override async Task OnInitializedAsync()
    {
        countries = await countryService.GetAll().ConfigureAwait(false);
    }

    public async Task AddCreditor()
    {
        Creditor creditorCreated = await creditorService.AddAsync(creditor).ConfigureAwait(false);

        if (creditorCreated != null)
        {
            var message = new NotificationMessage()
            {
                Severity = NotificationSeverity.Success,
                Summary = "Acreedor añadido",
                Detail = "El acreedor se ha añadido correctamente",
                Duration = 4000
            };
            Notify(message);
            NavigationManager.NavigateTo("empresas");

        }
        else
        {
            errorMessage = "Se ha producido un error. Inténtelo de nuevo.";
            var message = new NotificationMessage()
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error",
                Detail = "Se ha producido un error al añadir el acreedor.",
                Duration = 4000
            };
            Notify(message);
        }
    }

    public void OnCancel()
    {
        NavigationManager.NavigateTo("empresas");
    }

    private void Notify(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}
