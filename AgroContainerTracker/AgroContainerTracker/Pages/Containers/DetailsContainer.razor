@page "/containers/details/{Id:int}"

@using AgroContainerTracker.Domain
@using AgroContainerTracker.Services
@inject IContainerService containerService


<h3>Contenedor @Id</h3>

@if (container == null)
{
    <p><em>No se ha encontrado el contenedor</em></p>
}
else
{
    <p>Cargado contenedor @container.ContainerId</p>
    <p>Tamaño: @container.Size</p>
    <p>Palots: @container.Palots.Count</p>

    <table class="table">
        <thead>
            <tr>
                <th>Palot</th>
                <th>Entrada</th>
                <th>Fecha Entrada</th>
                <th>Peso</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var palot in container.Palots)
            {
                <tr>
                    <td>@palot.PalotId</td>
                    <td>@palot.ArrivalNumber</td>
                    <td>@palot.Arrival.ToShortDateString()</td>
                    <td>@palot.Departure.ToShortDateString()</td>
                    <td>@palot.Weight</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private Container container;

    protected override async Task OnInitializedAsync()
    {
        container = await containerService.GetContainerAsync(Id);
    }
}
